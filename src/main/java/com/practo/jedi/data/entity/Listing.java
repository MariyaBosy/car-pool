package com.practo.jedi.data.entity;
// Generated Aug 18, 2016 7:28:05 PM by Hibernate Tools 4.3.1


import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Listings generated by hbm2java
 */
@Entity
@Table(name = "listings")
public class Listing implements java.io.Serializable {


  /**
   * 
   */
  private static final long serialVersionUID = 132705768230565793L;
  private Integer id;
  private Address addresses;
  private Source sources;
  private User users;
  private Vehicle vehicles;
  private Date departureTime;
  private int seatsAvailable;
  private Date createdAt;
  private Date modifiedAt;
  private Date deletedAt;
  private boolean isDeleted;
  private Set<Booking> bookingses = new HashSet<Booking>(0);

  public Listing() {}


  public Listing(Address addresses, Source sources, User users, Vehicle vehicles,
      Date departureTime, int seatsAvailable, Date createdAt, Date modifiedAt, boolean isDeleted) {
    this.addresses = addresses;
    this.sources = sources;
    this.users = users;
    this.vehicles = vehicles;
    this.departureTime = departureTime;
    this.seatsAvailable = seatsAvailable;
    this.createdAt = createdAt;
    this.modifiedAt = modifiedAt;
    this.isDeleted = isDeleted;
  }

  public Listing(Address addresses, Source sources, User users, Vehicle vehicles,
      Date departureTime, int seatsAvailable, Date createdAt, Date modifiedAt, Date deletedAt,
      boolean isDeleted, Set<Booking> bookingses) {
    this.addresses = addresses;
    this.sources = sources;
    this.users = users;
    this.vehicles = vehicles;
    this.departureTime = departureTime;
    this.seatsAvailable = seatsAvailable;
    this.createdAt = createdAt;
    this.modifiedAt = modifiedAt;
    this.deletedAt = deletedAt;
    this.isDeleted = isDeleted;
    this.bookingses = bookingses;
  }

  @Id
  @GeneratedValue(strategy = IDENTITY)


  @Column(name = "id", unique = true, nullable = false)
  public Integer getId() {
    return this.id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  @ManyToOne(fetch = FetchType.LAZY)
  @JoinColumn(name = "destination_address_id", nullable = false)
  public Address getAddresses() {
    return this.addresses;
  }

  public void setAddresses(Address addresses) {
    this.addresses = addresses;
  }

  @ManyToOne(fetch = FetchType.LAZY)
  @JoinColumn(name = "source_id", nullable = false)
  public Source getSources() {
    return this.sources;
  }

  public void setSources(Source sources) {
    this.sources = sources;
  }

  @ManyToOne(fetch = FetchType.LAZY)
  @JoinColumn(name = "user_id", nullable = false)
  public User getUsers() {
    return this.users;
  }

  public void setUsers(User users) {
    this.users = users;
  }

  @ManyToOne(fetch = FetchType.LAZY)
  @JoinColumn(name = "car_id", nullable = false)
  public Vehicle getVehicles() {
    return this.vehicles;
  }

  public void setVehicles(Vehicle vehicles) {
    this.vehicles = vehicles;
  }

  @Temporal(TemporalType.TIMESTAMP)
  @Column(name = "departure_time", nullable = false, length = 19)
  public Date getDepartureTime() {
    return this.departureTime;
  }

  public void setDepartureTime(Date departureTime) {
    this.departureTime = departureTime;
  }


  @Column(name = "seats_available", nullable = false)
  public int getSeatsAvailable() {
    return this.seatsAvailable;
  }

  public void setSeatsAvailable(int seatsAvailable) {
    this.seatsAvailable = seatsAvailable;
  }

  @Temporal(TemporalType.TIMESTAMP)
  @Column(name = "created_at", nullable = false, length = 19)
  public Date getCreatedAt() {
    return this.createdAt;
  }

  public void setCreatedAt(Date createdAt) {
    this.createdAt = createdAt;
  }

  @Temporal(TemporalType.TIMESTAMP)
  @Column(name = "modified_at", nullable = false, length = 19)
  public Date getModifiedAt() {
    return this.modifiedAt;
  }

  public void setModifiedAt(Date modifiedAt) {
    this.modifiedAt = modifiedAt;
  }

  @Temporal(TemporalType.TIMESTAMP)
  @Column(name = "deleted_at", length = 19)
  public Date getDeletedAt() {
    return this.deletedAt;
  }

  public void setDeletedAt(Date deletedAt) {
    this.deletedAt = deletedAt;
  }


  @Column(name = "is_deleted", nullable = false)
  public boolean isIsDeleted() {
    return this.isDeleted;
  }

  public void setIsDeleted(boolean isDeleted) {
    this.isDeleted = isDeleted;
  }

  @OneToMany(fetch = FetchType.LAZY, mappedBy = "listings")
  public Set<Booking> getBookingses() {
    return this.bookingses;
  }

  public void setBookingses(Set<Booking> bookingses) {
    this.bookingses = bookingses;
  }



}


